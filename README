Run on single machine:

./gen-jar.sh
ps aux | grep rmire|grep -v grep|awk '{print $2}'|xargs kill -9
rmiregistry 1099 &

java -jar barrier.jar 3  # listen at localhost:1099/BServer, 3 means number of servers in the system
java -jar server.jar 0 0 # args [0] server id(0-based) [1]: start record id  
java -jar server.jar 1 100
java -jar server.jar 2 200

# check output in results file in current dir



OLD
=========================================

1. how to run server example:

- compile using eclipse
- cd bin
- start rmiregistry
- rmic rmi.ServerImpl
- java rmi.ServerExample

2. how to run client example
- cd bin
- java rmi.ClientExample



Barrier running step:

- Barrier server:
	compile with eclipse(not tested) or
		$javac -sourcepath src/ src/rmi/B*.java
	cd src
	rmiregistry &	--for Unix/Linux
	rmic rmi.BarrierImpl
	java rmi.BarrierExample [client #, no more than 10]
	
- Barrier client:
	cd src
	java rmi.BarrierClientExample [ID #]


- Example:
	java rmi.BarrierExample 3
	java rmi.BarrierClientExample 0
	java rmi.BarrierClientExample 1
	java rmi.BarrierClientExample 2


	
MainEntry:
ps -ef | grep rmiregistry
kill

- Barrier server:
1.	rmiregistry &	--for Unix/Linux
2.	rmic rmi.BarrierImpl
3.	java rmi.BarrierExample [client #, no more than 10]

- MainEntry client
1.	rmiregistry &
1.	rmic rmi.NetworkServerImpl
2.	rmic rmi.BarrierImpl
2.	java gen.MainEntry
